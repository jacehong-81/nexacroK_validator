<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="BasicChartContentsEditor" width="800" height="500" titletext="BasicChartContentsEditor" onload="Form_onload" onkeydown="BasicEditor_onkeydown" onkeyup="BasicEditor_onkeyup">
    <Layouts>
      <Layout height="500" mobileorientation="landscape" width="800">
        <Div id="Area_Controls" taborder="0" top="0" width="180" bottom="0" left="0" cssclass="left_div">
          <Layouts>
            <Layout>
              <Static id="Sta_infomation" taborder="0" text="   Information" left="0" width="100%" height="24" cssclass="left_title" top="-1"/>
              <Button id="Expander_information" taborder="1" left="0" top="0" height="23" cssclass="btn_expand" width="15" onclick="Area_Controls_Expander_onclick" expandStatus="expand" expandTarget="Area_information"/>
              <Div id="Area_information" taborder="2" left="0" top="Sta_infomation:0" width="100.00%" height="162" background="transparent" border="0px none">
                <Layouts>
                  <Layout>
                    <Button id="Btn_title" taborder="0" text="Title" left="0" top="0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" classname="nexacro.ChartTitleControl" controlname="title" index="-1" subcontrol="false"/>
                    <Button id="Btn_title_check" taborder="1" left="17" top="3" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="title" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_title_view" taborder="2" left="158" top="3" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="title" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_legend" taborder="3" text="Legend" left="0" top="Btn_title:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" classname="nexacro.ChartLegendControl" controlname="legend" index="-1" subcontrol="false"/>
                    <Button id="Btn_legend_check" taborder="4" left="17" top="21" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="legend" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_legend_view" taborder="5" left="158" top="21" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="legend" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_hrangebar" taborder="6" text="Hrangebar" left="0" top="Btn_legend:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" classname="nexacro.ChartRangebarControl" controlname="hrangebar" index="-1" subcontrol="false"/>
                    <Button id="Btn_hrangebar_check" taborder="7" left="17" top="39" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="hrangebar" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_hrangebar_view" taborder="8" left="158" top="39" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="hrangebar" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_vrangebar" taborder="9" text="Vrangebar" left="0" top="Btn_hrangebar:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" classname="nexacro.ChartRangebarControl" controlname="vrangebar" index="-1" subcontrol="false"/>
                    <Button id="Btn_vrangebar_check" taborder="10" left="17" top="57" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="vrangebar" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_vrangebar_view" taborder="11" left="158" top="57" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="vrangebar" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_tooltip" taborder="12" text="Tooltip" left="0" top="Btn_vrangebar:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" controlname="tooltip" classname="nexacro.ChartTooltipControl" index="-1" subcontrol="false"/>
                    <Button id="Btn_tooltip_check" taborder="13" left="17" top="75" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="tooltip" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_tooltip_view" taborder="14" left="158" top="75" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="tooltip" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_board" taborder="15" text="Board" left="0" top="Btn_tooltip:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" controlname="board" classname="nexacro.ChartBoardControl" index="-1" subcontrol="false"/>
                    <Button id="Btn_board_view" taborder="16" left="158" top="93" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="board" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_categoryaxis" taborder="17" text="Categoryaxis" left="0" top="Btn_board:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" controlname="categoryaxis" classname="nexacro.ChartCategoryAxisControl" index="-1" subcontrol="false"/>
                    <Button id="Btn_categoryaxis_view" taborder="18" left="158" top="111" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="categoryaxis" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_crosshair" taborder="19" text="Crosshair" left="0" top="Btn_categoryaxis:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" controlname="crosshair" classname="nexacro.ChartCrosshairControl" index="-1" subcontrol="false"/>
                    <Button id="Btn_crosshair_check" taborder="20" left="17" top="129" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="crosshair" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_crosshair_view" taborder="21" left="158" top="129" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="crosshair" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                    <Button id="Btn_selection" taborder="22" text="Selection" left="0" top="Btn_crosshair:0" width="100.00%" height="18" cssclass="left_menu1" onclick="Div_Controls_Btn_onclick" controlname="selection" classname="nexacro.ChartSelectionControl" index="-1" subcontrol="false"/>
                    <Button id="Btn_selection_check" taborder="23" left="17" top="147" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="selection" cssclass="btn_check" onclick="Area_Controls_Area_information_Btn_check_onclick"/>
                    <Button id="Btn_selection_view" taborder="24" left="158" top="147" width="13" height="13" subcontrol="true" is_rearrange="false" controlname="selection" cssclass="btn_view" onclick="Area_Controls_Area_information_Btn_view_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
              <Static id="Sta_valueaxes" taborder="3" text="  Valueaxes" left="0" top="Area_information:0" width="100.00%" height="24" cssclass="left_title"/>
              <Button id="Expander_valueaxes" taborder="4" left="0" top="Area_information:0" height="23" onclick="Area_Controls_Expander_onclick" expandStatus="expand" expandTarget="Area_valueaxes" cssclass="btn_expand" width="15"/>
              <Button id="Btn_removeValueaxis" taborder="5" top="Sta_valueaxes:-20" width="18" height="18" left="Sta_valueaxes:-23" onclick="Div_Controls_Btn_removeValueaxis_onclick" cssclass="btn_del"/>
              <Button id="Btn_appenValueaxis" taborder="6" top="Sta_valueaxes:-20" width="18" height="18" onclick="Div_Controls_Btn_appenValueaxis_onclick" cssclass="btn_add" right="Btn_removeValueaxis:4"/>
              <Div id="Area_valueaxes" taborder="7" left="0" top="Sta_valueaxes:0" width="100.00%" height="120" background="transparent" border="0px none"/>
              <Static id="Sta_seriesset" taborder="8" text="  Seriesset" left="0" top="Area_valueaxes:0" width="100.00%" height="24" cssclass="left_title"/>
              <Button id="Expander_seriesset" taborder="9" left="0" top="Area_valueaxes:1" height="23" expandTarget="Area_seriesset" expandStatus="expand" onclick="Area_Controls_Expander_onclick" cssclass="btn_expand" width="15"/>
              <Button id="Btn_removeSeries" taborder="10" top="Sta_seriesset:-20" width="18" height="18" left="Sta_seriesset:-23" onclick="Div_Controls_Btn_removeSeries_onclick" cssclass="btn_del"/>
              <Button id="Btn_appenSeries" taborder="11" top="Sta_seriesset:-20" width="18" height="18" right="Btn_removeSeries:4" onclick="Div_Controls_Btn_appenSeries_onclick" cssclass="btn_add"/>
              <Button id="Btn_SeriessetColor" taborder="12" top="Sta_seriesset:-21" width="18" height="18" onclick="Div_Controls_Btn_SeriessetColor_onclick" cssclass="btn_fill" right="Btn_appenSeries:4"/>
              <Div id="Area_seriesset" taborder="13" left="0" top="Sta_seriesset:0" height="50" border="0px none" background="transparent" width="100%"/>
            </Layout>
          </Layouts>
        </Div>
        <Radio id="Rdo_changedata" taborder="1" left="179" top="0" height="24" right="0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" rowcount="1" padding="0px 300px 0px 50px" cssclass="chart_radio" onitemchanged="Rdo_changedata_onitemchanged">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">0</Col>
                <Col id="datacolumn">Real Data</Col>
              </Row>
              <Row>
                <Col id="codecolumn">1</Col>
                <Col id="datacolumn">Sample Data</Col>
              </Row>
            </Rows>
          </Dataset>
        </Radio>
        <Static id="Sta_datastatusinfo" taborder="2" text="※ The data in the chart contents editor is Sample Data, not Real Data." height="15" color="red" font="7pt/normal &quot;맑은 고딕&quot;" top="5" width="300" right="5"/>
        <BasicChart id="Chart_Preview" taborder="3" top="25" left="210" right="30" bottom="30"/>
        <PopupDiv id="Popup_SeriesTemplate_Bar" visible="false" left="212" top="30" width="56" height="283" onpopup="Popup_SeriesTemplate_Bar_onpopup" cssclass="popdiv_type">
          <Layouts>
            <Layout>
              <Div id="Div00" taborder="0" left="1" top="1" width="1" height="1"/>
              <Button id="Btn_Temp_bar" taborder="1" left="3" top="3" width="48" height="48" onclick="Popup_SeriesTemplate_Bar_Btn_onclick" template="bar" cssclass="btn_type01" prop="barvisible"/>
              <Button id="Btn_Temp_stack" taborder="2" left="3" top="Btn_Temp_bar:3" width="48" height="48" onclick="Popup_SeriesTemplate_Bar_Btn_onclick" template="stack" cssclass="btn_type02" prop="stacktype"/>
              <Button id="Btn_Temp_line" taborder="3" left="3" top="Btn_Temp_stack:3" width="48" height="48" onclick="Popup_SeriesTemplate_Bar_Btn_onclick" template="line" cssclass="btn_type03" prop="linevisible"/>
              <Button id="Btn_Temp_point" taborder="4" left="3" top="Btn_Temp_line:3" width="48" height="48" onclick="Popup_SeriesTemplate_Bar_Btn_onclick" template="point" cssclass="btn_type04" prop="pointvisible"/>
              <Button id="Btn_Temp_area" taborder="5" left="3" top="Btn_Temp_point:3" width="48" height="48" onclick="Popup_SeriesTemplate_Bar_Btn_onclick" template="linearea" cssclass="btn_type05" prop="lineareavisible"/>
            </Layout>
          </Layouts>
        </PopupDiv>
        <PopupDiv id="Popup_ColorsetTemplate" visible="false" left="212" top="320" width="226" height="100" cssclass="popdiv_color">
          <Layouts>
            <Layout>
              <Div id="Div00" taborder="0" left="1" top="1" width="1" height="1"/>
              <Static id="Static00" taborder="1" left="2" top="3" width="218" height="18" text="Seriesset Color Template" border="0px none , 0px none , 2px solid gray" textAlign="center" cssclass="pop_color_title"/>
              <Button id="Btn_Temp1" taborder="2" left="3" top="26" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Blue10" cssclass="btn_temp01"/>
              <Button id="Btn_Temp2" taborder="3" left="Btn_Temp1:5" top="26" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Red10" cssclass="btn_temp02"/>
              <Button id="Btn_Temp3" taborder="4" left="Btn_Temp2:5" top="26" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Green10" cssclass="btn_temp03"/>
              <Button id="Btn_Temp4" taborder="5" left="Btn_Temp3:5" top="26" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Purple10" cssclass="btn_temp04"/>
              <Button id="Btn_Temp5" taborder="6" left="3" top="Btn_Temp1:5" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Mix10" cssclass="btn_temp05"/>
              <Button id="Btn_Temp6" taborder="7" left="Btn_Temp5:5" top="Btn_Temp1:5" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Color20" cssclass="btn_temp06"/>
              <Button id="Btn_Temp7" taborder="8" left="Btn_Temp6:5" top="Btn_Temp1:5" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Color20b" cssclass="btn_temp07"/>
              <Button id="Btn_Temp8" taborder="9" left="Btn_Temp7:5" top="Btn_Temp1:5" width="50" height="30" onclick="Popup_ColorsetTemplate_Btn_onclick" colorset="Color20c" cssclass="btn_temp08"/>
            </Layout>
          </Layouts>
        </PopupDiv>
      </Layout>
    </Layouts>
    <Script type="xscript5.1">
    <![CDATA[/* include */
include "ContentsForm::Defines.xjs";
include "ContentsForm::UndoList.xjs";
include "ContentsForm::UndoBuffer.xjs";
include "ContentsForm::UndoItem.xjs";
/* internal variable */
this.module = nexacro.CTSE.Chart.BasicChart;
this.oContents = {};

this._bInit = false;
this._bFirstApply = false;
this._bOriginData = false;

this._init_prop = null;
this._selected_control = null;
this._selected_colorset = null;
this._selected_template = null;
this._last_valuecolumn = 2;

this._valueaxis_cnt = 0;
this._series_cnt = 0;
this._min_categorycolumn = 1;
this._min_selectcolumn = 1;
this._min_valuecolumn = 5;
this._charttype = nexacro.CTSE.Chart.BasicChartType;
/* ContentsEditor Functions */

this.setPrefixUrls = function ()
{
	var ret = this.userNotifyCall(nexacro.CTSE.NotifyTypes.GET_PREFIX_PATH);	
	eval("this._prefix_urls = " + ret + ";");
	
};
this.GetSource = function ()
{
	//trace(">>>>>GetSource");
	if (!this._bInit)
	{
		// contents가 없는 chart opne시 getSource 무시
		this._bInit = true;
		if (!this._bFirstApply)
			return;
	}
	
	return JSON.stringify(this.oContents, null, "\t");
};

this.SetSource = function (sContents)
{
	//trace(">>>>>SetSource : " + sContents);

	this.oContents = {};
	var preContents = {};
	var postContents = {};
	var bChangedContents = false;
	if (sContents)
	{
		this._bFirstApply = true;
		preContents = JSON.parse(sContents);
		var addboard = false;
		var addcategoryaxis = false;
		if(!preContents["board"])
		{
			addboard = true;
		}
		if(!preContents["categoryaxis"])
		{
		   addcategoryaxis = true;
		}
		if(addboard || addcategoryaxis)
		{
			bChangedContents = true;
			postContents = nexacro.CTSE.Chart.Util.cloneContents(preContents);
			if(addboard)
			{
				postContents["board"] = nexacro.CTSE.Chart.Util.cloneContents(this.module["default_" + "board"]);
			}
			if(addcategoryaxis)
			{
				postContents["categoryaxis"] = nexacro.CTSE.Chart.Util.cloneContents(this.module["default_" + "categoryaxis"]);
			}
		}
		
	}
	else
	{
		this._bFirstApply = false;
		postContents = nexacro.CTSE.Chart.Util.cloneContents(this.module.default_contents);
		bChangedContents = true;
	}
	if(bChangedContents)
	{
		
		nexacro.CTSE.Chart.Util.recoverableInitContents(this,preContents,postContents,true,true);
		delete postContents;
		postContents = null;
	}
	else
	{
		
		nexacro.CTSE.Chart.Util.InitContents(this,nexacro.CTSE.Chart.Util.cloneContents(preContents));
	}
	
};

this.GetProperty = function (sPropName)
{	
	//trace(">>>>>GetProperty : " + sPropName);
	
	var i, j;
	var ret, chart_value;
	var bSetted = false;
	
	var chart = this.Chart_Preview;
	var target = this._selected_control;
	var no_update_list = this.module.NON_UPDATE_PROPERTY;
	
	if (chart && target)
	{
		var controlname = target.controlname;
		if (controlname == "seriesset" || controlname == "valueaxes")
		{
			ret = this.oContents[controlname][target.index][sPropName];
			chart_value = chart[controlname][target.index][sPropName];
		}
		else
		{
			ret = this.oContents[controlname][sPropName];
			chart_value = chart[controlname][sPropName];
		}
	}

	if(nexacro._isUndefined(ret))
	{
		for (i in no_update_list)
		{
			if (i == target.controlname && no_update_list[i].indexOf(sPropName) > -1)
			{
				ret = "DEF:";
				bSetted = true;
				break;
			}
		}
		
		if (!bSetted)
		{
			ret = "DEF:";
			if (!nexacro._isUndefined(chart_value))
				ret += chart_value;
		}	
	}
	else
	{
		ret = "XML:" + ret;
	}
		
	return ret;
};

this.SetProperty = function (sPropName, sPropVal, bSetDefault)
{
	
	var i, j;
	var control;
	var setter = "set_" + sPropName;
	
	var chart = this.Chart_Preview;
	var target = this._selected_control;
	if (chart && target)
	{
		var controlname = target.controlname;
		var controlindex = target.index;
		var prevalue;
		var controlprevalue;
		if (controlname == "seriesset" || controlname == "valueaxes")
		{
			prevalue = this.oContents[controlname][controlindex][sPropName];
			controlprevalue = chart[controlname][controlindex][sPropName];
		}
		else
		{
			prevalue = this.oContents[controlname][sPropName];
			controlprevalue = chart[controlname][sPropName];
		}
		if(sPropName == "id" && controlname == "seriesset" || controlname == "valueaxes")
		{
		    var len = this.oContents[controlname] ? this.oContents[controlname].length : 0;
			var ret = nexacro.CTSE.Chart.Util.checkindexid(sPropVal,this.oContents[controlname],len,target.index);
			if(!ret)
			{  
				
				var errormsg = nexacro.CTSE.CHART_MESSAGE.ERROR_ALREADY_EXISTS_ID + "\"" + sPropVal + "\""  ;
				nexacro.CTSE.ConfirmBox(nexacro.CTSE.ConfirmTypes.ERROR, [nexacro.CTSE.ConfirmButtons.OK], errormsg);
				return false;
			}
		}
		else if(sPropName == "id" && controlname != "seriesset" && controlname != "valueaxes")
		{
		   
			
			var len = this.oContents ? Object.keys(this.oContents).length : 0;
			var ret = nexacro.CTSE.Chart.Util.checkindexid(sPropVal,this.oContents,len,controlname,true);
			
			if(!ret)
			{  
				
				var errormsg = nexacro.CTSE.CHART_MESSAGE.ERROR_ALREADY_EXISTS_ID + "\"" + sPropVal + "\""  ;
				nexacro.CTSE.ConfirmBox(nexacro.CTSE.ConfirmTypes.ERROR, [nexacro.CTSE.ConfirmButtons.OK], errormsg);
				return false;
			}
		}
		nexacro.CTSE.Chart.Util.recoverableProperty(this,controlname,controlindex,sPropName,prevalue,sPropVal,controlprevalue,bSetDefault,true,true);
		
		
		return true;
	}
	
	return false;
};

this.SetDataset = function (sContents)
{
	//trace(">>>>>SetDataset : " + sContents);
	
	if (!this.DS_ChartOriginData)
	{
		var obj = new Dataset("DS_ChartOriginData", this);
		obj._setContents(sContents);
		this.addChild(obj.name, obj);
		
		this.on_created();
	}
	
	return false;
};

this.CanUseUserProperty = function()
{
	return false;
};

this.AddUserProperty = function (property, value)
{
	return false;
};

this.DeleteUserProperty = function (property)
{
	return false;
};

this.GetUserPropertyList = function ()
{
	return "";
};

this.setZoom - function(v)
{
	// 삭제된 함수.. 
}

this.getZoom = function()
{
	// 삭제된 함수.. 
	return 100;
}
this.SetComponentProperties = function (v)
{
	//trace(">>>>>SetComponentProperties : ");
	
	this._init_prop = v;
};

this.GetChangedComponentProperties = function ()
{
	return [];
};

this.GetUserPropertyList = function ()
{
	return "";
};

this.GetCommandList = function ()
{
	return "";
};

this.ExcuteAccelator = function(altkey, ctrlkey, shiftkey, keycode)
{
	var refreshCmdState = true;
	if(ctrlkey)
	{
		if(keycode === 90)												    {	this.userNotifyCall(nexacro.CTSE.NotifyTypes.UNDO,null);	}		// Crtl + Z : Undo
		else if(keycode === 89)												{	this.userNotifyCall(nexacro.CTSE.NotifyTypes.REDO,null);	}		// Crtl + Y : Redo
		else
		{			
			return false;
		}
	}	
	else
	{			
		return false;
	}
	
	
	return true;
};

this._canUndo = function() 
{
	return this._undoList.canUndo();
};

this.Undo = function()
{
   
	return this._undo();		
};

this.Redo = function()
{
    
	return this._redo();		
};

this._undo = function()
{
	if( this._canUndo() )
	{
		var buffer = this._undoList.undo();
		buffer.undo();		
		
	}
};

this._canRedo = function() 
{
	return this._undoList.canRedo();
};

this._redo = function()
{
	if( this._canRedo() )
	{
		var buffer = this._undoList.redo();
		buffer.redo();
		
	}	
};

this._addUndo = function(perform, data, save, execute, undraw, redraw)
{
	var rtn;

	if( execute )
	{
		rtn = perform.call(this, true, data);
	}
	this._undoBuffer.add( new nexacro.CTSE.Chart._UndoItem(perform, data), undraw, redraw );
		
	if(	save )
	{
		this._saveUndoBuffer();
	}

	return rtn;
};

this._saveUndoBuffer = function()
{
	this._undoBuffer.save(this._undoList);
	this._undoBuffer = new nexacro.CTSE.Chart._UndoBuffer();
	
	this.callNotify_ContentsChange();
};

this.callNotify_ContentsChange = function()
{
	return this.userNotifyCall(nexacro.CTSE.NotifyTypes.CHANGE_CONTENTS, null);
};
this.IsModified = function()
{
    return this._canUndo();
};

this.EndEditor = function ()
{

};

/* ContentsEditor Component Event */
this.Form_onload = function (obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.setPrefixUrls();
	this._undoList = new nexacro.CTSE.Chart._UndoList(this);
	this._undoBuffer = new nexacro.CTSE.Chart._UndoBuffer();
	this.userNotifyCall(nexacro.CTSE.NotifyTypes.FORM_ONLOAD, "");
	
	this.initChart();
	this.initControlStatus();

	nexacro.CTSE.Chart.Menu.resetscrollArea(this.Area_Controls);
};

this.Div_Controls_Btn_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var chart = this.Chart_Preview;
	if (chart)
	{
		if (this._selected_control)
			this._selected_control.setSelectStatus(false);
		
		this._selected_control = obj;
		this._selected_control.setSelectStatus(true);

		this.userNotifyCall(nexacro.CTSE.NotifyTypes.CHANGE_SELECTED, obj.classname);
	}
};

this.Area_Controls_Area_information_Btn_check_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	obj.toggleSelectStatus();
	if (obj.getSelectStatus())
	{
		nexacro.CTSE.Chart.Util.recoverableAddContents(this,obj,this.module["default_" + obj.controlname],true,true);
	}
	else
	{
		nexacro.CTSE.Chart.Util.recoverableDeleteContents(this,obj,this.oContents[obj.controlname],true,true);
	}
	
};

this.Area_Controls_Area_information_Btn_view_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var control = this.Chart_Preview[obj.controlname];
	
	var Prevalue = false;
	var Postvalue = false;
	if (obj.getSelectStatus())
	{
	   Prevalue = this.oContents[obj.controlname]["visible"];
	   Postvalue = false;
	}
	else
	{
	   Prevalue = this.oContents[obj.controlname]["visible"];
	   Postvalue = true;
	}
	nexacro.CTSE.Chart.Util.recoverableProperty(this,obj.controlname,obj.index,"visible",Prevalue,Postvalue,"",false,true,true);
	 
};

this.Div_Controls_Btn_appenValueaxis_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	
	var expand_contents;
	
	expand_contents = nexacro.CTSE.Chart.Util.cloneContents(this.module.default_valueaxis);
	 
	expand_contents.id = nexacro.CTSE.Chart.Util.makeindexcontentsid(expand_contents.id ,this._valueaxis_cnt,this.oContents["valueaxes"]);
	nexacro.CTSE.Chart.Util.recoverableAddAxis(this,this.oContents,expand_contents.id,expand_contents,true,true);
	 
};

this.Div_Controls_Btn_removeValueaxis_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

	
	var area = this.Area_Controls.form.Area_valueaxes.form;
	var comps = area.components;
	var comps_len = comps.length;
	
	var control = this._selected_control;
	if (control)
	{
		if (control.controlname != "valueaxes")
		{
			if (comps_len)
				control = comps[comps_len - 1];
			else
				return;
		}
		
	}
	else
	{
		
		if (comps_len)
			control = comps[comps_len - 1];
		else
			return;
	}
	
	var valueaxes = this.oContents["valueaxes"];
	if (valueaxes)
	{
		var axisindex = nexacro.CTSE.Chart.Util.indexOf(valueaxes,control.id);
		nexacro.CTSE.Chart.Util.recoverableDeleteAxis(this,this.oContents,control.id,this.oContents["valueaxes"][axisindex],true,true);
	}
	
 
};

this.Div_Controls_Btn_appenSeries_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var colorset = this._selected_colorset ? nexacro.CTSE.Chart.Colorset[this._selected_colorset] : null;
	var series_len = this.oContents["seriesset"] ? this.oContents["seriesset"].length : 0;
	
	//make contents
	//var id = "series" + this._series_cnt;
	
	var id = nexacro.CTSE.Chart.Util.makeindexcontentsid("series",this._series_cnt,this.oContents["seriesset"]);
	var expand_contents, expand_contents_copy;

	var expand_contents = {};
	expand_contents["id"] = id;
	if (colorset)
	{
		var coloser_idx = series_len % (colorset.length);

		expand_contents["barlinestyle"] = "1px solid " + colorset[coloser_idx];
		expand_contents["barfillstyle"] = colorset[coloser_idx];
	}
	
	
	nexacro.CTSE.Chart.Util.recoverableAddSeries(this,this.oContents,id,expand_contents,true,true);
	 
};

this.Div_Controls_Btn_removeSeries_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

	
	var area = this.Area_Controls.form.Area_seriesset.form;
	var comps = area.components;
	var comps_len = comps.length;
	
	var control = this._selected_control;
	if (control)
	{
		if (control.controlname != "seriesset")
		{   
			
			if (comps_len)
			{
			    comps_len--;
				control = comps[comps_len - 1];
			}
			else
				return;
		}
		
	}
	else
	{
		// Button이 선택되어 있지 않으면, 가장 마지막 Series 지움.
		if (comps_len)
		{
			comps_len--;
			control = comps[comps_len - 1];
		}
		else
			return;
	}
	
	var seriesset = this.oContents["seriesset"];
	if (seriesset)
	{
		var seriesindex = nexacro.CTSE.Chart.Util.indexOf(seriesset,control.id);
		nexacro.CTSE.Chart.Util.recoverableDeleteSeries(this,this.oContents,control.id,this.oContents["seriesset"][seriesindex],true,true);
	}
 
};

this.Div_Controls_Btn_SeriessetColor_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

    nexacro.CTSE.Chart.Menu.trackPopup(obj, this.Area_Controls, this["Popup_ColorsetTemplate"]);
	
	
};

this.Div_Controls_Btn_template_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var chart = this.Chart_Preview;
	if (chart)
	{
		if (this._selected_control)
			this._selected_control.setSelectStatus(false);
		
		this._selected_control = this.Area_Controls.form.Area_seriesset.form[obj.parentname];
		this._selected_control.setSelectStatus(true);

		this.userNotifyCall(nexacro.CTSE.NotifyTypes.CHANGE_SELECTED, this._selected_control.classname);
	}
	
	nexacro.CTSE.Chart.Menu.trackPopup(obj, this.Area_Controls, this["Popup_SeriesTemplate_Bar"]);
};

this.Area_Controls_Expander_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (obj.expandStatus == "expand")
	{
		obj.expandStatus = "collapse";
		nexacro.CTSE.Chart.Menu.collapse(this.Area_Controls.form[obj.expandTarget]);
	}
	else
	{
		obj.expandStatus = "expand";
		nexacro.CTSE.Chart.Menu.expand(this.Area_Controls.form[obj.expandTarget]);
	}
	
	obj.set_cssclass("btn_" + obj.expandStatus);
	nexacro.CTSE.Chart.Menu.resetscrollArea(this.Area_Controls);
};

this.Rdo_changedata_onitemchanged = function(obj:nexacro.Radio,e:nexacro.ItemChangeEventInfo)
{
	
	if (e.posttext == "Sample Data")
	{
		this._bOriginData = false;
		this.Sta_datastatusinfo.set_visible(true);
		this.initChart_TempData();
		
	}
	else
	{
		this._bOriginData = true;
		if (!this.DS_ChartOriginData)
		{
			var obj = new Dataset("DS_ChartOriginData", this);
			obj._setContents("");
			this.addChild(obj.name, obj);
			
			this.on_created();
		}
		this.Sta_datastatusinfo.set_visible(false);
		this.initChart_OriginData();
	}
	
	//this.initControlStatus();
};

this.Popup_SeriesTemplate_Bar_onpopup = function(obj:nexacro.PopupDiv,e:nexacro.EventInfo)
{
	var popup_form = obj.form;
	var popup_comp, prop;
	var popup_comps = popup_form.components;

	var series = this.Chart_Preview.seriesset[this._selected_control.index];
	for (var i = 0; i < popup_comps.length; i++)
	{
		popup_comp = popup_comps[i];
		prop = popup_comp.prop;
		if (prop)
		{
			if (prop == "stacktype")
			{
				if (!series[prop] || (series[prop] && series[prop] == "none"))
					popup_comp.setSelectStatus(false);
				else
					popup_comp.setSelectStatus(true);
			}
			else
			{
				popup_comp.setSelectStatus(series[prop]);
			}
		}
	}
};

this.Popup_ColorsetTemplate_Btn_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

   
	var preselected_colorset = this._selected_colorset;
	var postselected_colorset = obj.colorset;
	this._selected_colorset = obj.colorset;
	var newseriesset = nexacro.CTSE.Chart.Util.updateColorsetSeries(this,nexacro.CTSE.Chart.Colorset[obj.colorset]);
	if(newseriesset)
	{
		nexacro.CTSE.Chart.Util.recoverableColorSetTemplate(this,this.oContents["seriesset"],newseriesset,preselected_colorset,postselected_colorset,true,true);
	}
	else
	{
	}
	
	
	
	var popup = obj.parent.parent;
	if (popup)
		popup.closePopup();
		
	//this.userNotifyCall(nexacro.CTSE.NotifyTypes.CHANGE_CONTENTS, null);
};

this.Popup_SeriesTemplate_Bar_Btn_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
   var preselectedtemplateid =  this._selected_template;
   var postselectedtemplateid = this._selected_template = obj.template;
   var data = [];
   var control = this._selected_control;
   var preseries = this.oContents["seriesset"][control.index];
  
   nexacro.CTSE.Chart.Util.updateBarTemplateSeries(this,obj.template,obj.prop,data);
  
   nexacro.CTSE.Chart.Util.recoverableSeriesBarTemplate(this,preseries,data[0],preselectedtemplateid,postselectedtemplateid,obj.getSelectStatus(),data[1],data[2],true,true);
  
   if(obj.parent.Div00)
      obj.parent.Div00.setFocus();
      
   objform.userNotifyCall(nexacro.CTSE.NotifyTypes.REFRESH_PROPERTY,obj.prop);
};

/* Form_ContentsEditor Util Function*/
this.userNotifyCall = function (strId, strMsg, bRetry)
{
	var rtn;
	try
	{
		rtn = nexacro.CTSE.userNotify(strId, strMsg);
	}
	catch(e)
	{
		if(!bRetry)
		{
			//trace("userNotifyCall error");
			//trace(e.toString());
		}
		return false;
	}
	return rtn;
};

this.initChart = function ()
{
	// set dataset flag
	var ds_origin = this.DS_ChartOriginData;
	if (ds_origin)
	{
		this._bOriginData = true;
	}
	else
	{
		this._bOriginData = false;
	}
	
	// init Chart
	if (this._bOriginData)
		this.initChart_OriginData();
	else
		this.initChart_TempData();
};

this.initControlStatus = function ()
{
	var i, j;
	var obj, id, length;
	var chk_control, view_control, btn_control;
	var controlname, singlename, classname, parent;
	
	var bUse = false;
	var bVisible = true;
	var contents = this.oContents;

	//single control update
	var list = this.module.SINGLE_CONTROL_LIST;
	for (i in list)
	{
		controlname = list[i];
		chk_control = this.Area_Controls.form.Area_information.form["Btn_" + controlname + "_check"];
		view_control = this.Area_Controls.form.Area_information.form["Btn_" + controlname + "_view"];
		btn_control = this.Area_Controls.form.Area_information.form["Btn_" + controlname];
		
		if (contents[controlname])
		{
			bUse = true;
			
			var keys = Object.keys(contents[controlname]);
			var values = Object.values(contents[controlname]);
			var idx_visible = keys.indexOf("visible");
			if (idx_visible > -1)
			{
				if (nexacro._toBoolean(values[idx_visible]))
					bVisible = true;
				else
					bVisible = false;
			}
			else
			{
				bVisible = true;
			}	
		}
		else
		{
			bUse = false;
		}
			
		if (chk_control)
		{
			chk_control.setSelectStatus(bUse);
		}

		if (view_control)
		{
			view_control.setSelectStatus(bVisible);
			view_control.set_enable(bUse);
		}
			
		if (btn_control)
		{
			btn_control.set_enable(bUse);
		}
	}

	//array control update
	list = this.module.ARRAY_CONTROL_LIST;
	for (i in list)
	{
		controlname = list[i];
		length = contents[controlname] ? contents[controlname].length : 0;
		
		if (contents[controlname])
		{
			if (controlname == "valueaxes")
			{
				singlename = "valueaxis";
				classname = "nexacro.ChartAxisControl"
				parent = this.Area_Controls.form.Area_valueaxes.form;
			}
			else if (controlname == "seriesset")
			{
				singlename = "series";
				classname = "nexacro.ChartBasicSeriesControl";
				parent = this.Area_Controls.form.Area_seriesset.form;
			}
			
			for (j = 0; j < length; j++)
			{
				id = contents[controlname][j].id;
				if (!parent[id])
				{
					obj = new nexacro.Button(id);
					obj.set_text(id);
					obj.set_cssclass("left_menu2");
					obj.getSetter("subcontrol").set(false);
					obj.getSetter("classname").set(classname);
					obj.getSetter("controlname").set(controlname);
					obj.getSetter("index").set(j);
					
					obj.addEventHandler("onclick", this.Div_Controls_Btn_onclick, this);
					
					parent.addChild(id, obj);
					obj.show();
					
					if (controlname == "seriesset")
					{
						obj = new nexacro.Button("Btn_SeriesSelector_" + id);
						obj.set_cssclass("btn_type_open");
						obj.getSetter("subcontrol").set(true);
						obj.getSetter("parentname").set(id);
						
						obj.addEventHandler("onclick", this.Div_Controls_Btn_template_onclick, this);
						
						parent.addChild("Btn_SeriesSelector_" + id, obj);
						obj.show();
					}
					
					this["_" + singlename + "_cnt"]++;
				}
			}
		}
	}
	
	if (this._bOriginData)
	{
		this.Rdo_changedata.set_value(0);
		this.Sta_datastatusinfo.set_visible(false);
	}
	else
	{
		this.Rdo_changedata.set_value(1);
		this.Sta_datastatusinfo.set_visible(true);
	}
	
	//menu refresh
	nexacro.CTSE.Chart.Menu.rearrangeArea(this.Area_Controls.form.Area_information);
	nexacro.CTSE.Chart.Menu.rearrangeArea(this.Area_Controls.form.Area_valueaxes);
	nexacro.CTSE.Chart.Menu.rearrangeArea(this.Area_Controls.form.Area_seriesset);
	nexacro.CTSE.Chart.Menu.resetscrollArea(this.Area_Controls);
};

this.initChart_OriginData = function()
{
	var i, prop, value, setter;
	var chart = this.Chart_Preview;
	chart.set_enableredraw(false);
	chart.set_binddataset(this.DS_ChartOriginData.id);
	
	//original chart property setting
	var init_prop = JSON.parse(this._init_prop);
	if (init_prop)
	{
		var init_prop_list = this.module.CHART_PROPERTY_LIST;
		for (i in init_prop_list)
		{
			prop = init_prop_list[i];
			value = init_prop[prop];
			setter = "set_" + prop;
			if (chart[setter] && value)
			{
				chart[setter].call(chart, value);
			}
		}
	}
	
	//preview chart update
	var contents_copy = nexacro.CTSE.Chart.Util.cloneContents(this.oContents);
	if(contents_copy["hrangebar"])
	{
		nexacro.CTSE.Chart.Util._changePrefixUrlContents(this,contents_copy["hrangebar"]);
	}
	if(contents_copy["vrangebar"])
	{
		nexacro.CTSE.Chart.Util._changePrefixUrlContents(this,contents_copy["vrangebar"]);
	}
	chart._setContents(contents_copy);
	//chart.draw();
	chart.set_enableredraw(true);
};

this.initChart_TempData = function()
{
	var i, prop, value, setter;
	var ds = this.DS_ChartTempData;
	var chart = this.Chart_Preview;
	chart.set_enableredraw(false);
	chart.set_binddataset(ds.id);
	
	//original chart property setting
	var init_prop = JSON.parse(this._init_prop);
	if (init_prop)
	{
		var init_prop_list = this.module.CHART_PROPERTY_LIST;
		for (i in init_prop_list)
		{
			prop = init_prop_list[i];
			value = init_prop[prop];
			setter = "set_" + prop;
			if (chart[setter])
			{
				if (prop == "categorycolumn")
				{
					chart[setter].call(chart, "bind:" + ds.getColID(0));
				}
				else
				{
					if (value)
					{
						chart[setter].call(chart, value);
					}
				}
			}
		}
	}
	
	//tempdata setting
	var contents_copy = nexacro.CTSE.Chart.Util.cloneContents(this.oContents);
	var series;
	var series_bindselectcolumn = 1;
	var series_bindvaluecolumn = 2;
	var seriesset = contents_copy["seriesset"];
	for (i in seriesset)
	{
		series = seriesset[i];
		
		// valuecolumn init
		series.valuecolumn = "bind:" + ds.getColID(series_bindvaluecolumn);
		this._last_valuecolumn = series_bindvaluecolumn;
		
		// valuecolumn circulation
		series_bindvaluecolumn++;
		if (ds.getColCount() == series_bindvaluecolumn)
			series_bindvaluecolumn = 2;
			
		// selectcolumn init
		if (series.selecttype == "bind")
			series.selectcolumn = "bind:" + ds.getColID(series_bindselectcolumn);
	}
	
	//preview chart update
	if(contents_copy["hrangebar"])
	{
		nexacro.CTSE.Chart.Util._changePrefixUrlContents(this,contents_copy["hrangebar"]);
	}
	if(contents_copy["vrangebar"])
	{
		nexacro.CTSE.Chart.Util._changePrefixUrlContents(this,contents_copy["vrangebar"]);
	}
	chart._setContents(contents_copy);
	//chart.draw();
	chart.set_enableredraw(true);
};

this.updateColorsetSeries = function (colorset)
{
	var chart = this.Chart_Preview;
	chart.set_enableredraw(false);
	var seriesset = this.oContents["seriesset"];
	if (chart && seriesset)
	{
		var i = 0;
		var coloser_idx = 0;
		var contents;
		var chart_control, contents_control;
		
		var series_len = seriesset.length;
		for (i; i <series_len; i++)
		{
			coloser_idx = i % (colorset.length);
			contents_control = seriesset[i];
			chart_control = chart.getSeriesByID(contents_control.id);
			contents = {};
			
			if (chart_control.barvisible)
			{
				contents["barlinestyle"] = "1px solid " + colorset[coloser_idx];
				contents["barfillstyle"] = colorset[coloser_idx];
			}
			if (chart_control.pointvisible)
			{
				contents["pointlinestyle"] = "1px solid " + colorset[coloser_idx];
				contents["pointfillstyle"] = colorset[coloser_idx];
			}
			if (chart_control.linevisible)
			{
				contents["linestyle"] = "1px solid " + colorset[coloser_idx];
				contents["linefillstyle"] = colorset[coloser_idx];
			}
			if (chart_control.lineareavisible)
			{
				contents["lineareafillstyle"] = colorset[coloser_idx];
			}
			
			if (chart_control.highlightbarvisible)
			{
				contents["highlightbarlinestyle"] = "1px solid " + colorset[coloser_idx];
				contents["highlightbarfillstyle"] = colorset[coloser_idx];
			}
			if (chart_control.highlightpointvisible)
			{
				contents["highlightpointlinestyle"] = "1px solid " + colorset[coloser_idx];
				contents["highlightpointfillstyle"] = colorset[coloser_idx];
			}
			if (chart_control.highlightlinevisible)
			{
				contents["highlightlinestyle"] = "1px solid " + colorset[coloser_idx];
			}

			nexacro.CTSE.Chart.Util.updateSeriesContents(this.oContents, contents_control.id, contents);
			chart.setSeries(contents_control.id, contents);
		}
		
		//chart.draw();
		chart.set_enableredraw(true);
	}
};


this.BasicEditor_onkeydown = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	
	if (this.ExcuteAccelator(e.altkey, e.ctrlkey, e.shiftkey, e.keycode) === true)
	{
		//trace("call ExcuteAccelator");
	}
	else
	{
	
	}

};

this.BasicEditor_onkeyup = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	
};
]]></Script>
    <Objects>
      <Dataset id="DS_ChartTempData">
        <ColumnInfo>
          <Column id="category" type="STRING" size="256"/>
          <Column id="select" type="STRING" size="256"/>
          <Column id="value1" type="STRING" size="256"/>
          <Column id="value2" type="STRING" size="256"/>
          <Column id="value3" type="STRING" size="256"/>
          <Column id="value4" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="category">category1</Col>
            <Col id="value1">10</Col>
            <Col id="value2">10</Col>
            <Col id="value3">40</Col>
            <Col id="value4">10</Col>
          </Row>
          <Row>
            <Col id="category">category2</Col>
            <Col id="select">1</Col>
            <Col id="value1">20</Col>
            <Col id="value2">40</Col>
            <Col id="value3">20</Col>
            <Col id="value4">20</Col>
          </Row>
          <Row>
            <Col id="category">category3</Col>
            <Col id="select">1</Col>
            <Col id="value1">30</Col>
            <Col id="value2">30</Col>
            <Col id="value3">10</Col>
            <Col id="value4">40</Col>
          </Row>
          <Row>
            <Col id="category">category4</Col>
            <Col id="value1">40</Col>
            <Col id="value2">20</Col>
            <Col id="value3">35</Col>
            <Col id="value4">5</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
